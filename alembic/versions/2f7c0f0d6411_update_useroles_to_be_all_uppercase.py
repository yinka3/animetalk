"""Update Useroles to be all uppercase

Revision ID: 2f7c0f0d6411
Revises: f92e18669fc3
Create Date: 2025-01-01 04:51:27.683612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f7c0f0d6411'
down_revision: Union[str, None] = 'f92e18669fc3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE userrole RENAME TO userrole_old;")

    # Step 2: Create the new enum type with uppercase values
    op.execute("""
        CREATE TYPE userrole AS ENUM ('USER', 'BUYER', 'SELLER', 'BOTH');
        """)

    # Step 3: Update the column to use the new enum type
    op.execute("""
        ALTER TABLE users
    ALTER COLUMN role TYPE userrole
    USING UPPER(role::text)::userrole;
        """)

    # Step 4: Drop the old enum type
    op.execute("DROP TYPE userrole_old;")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE userrole RENAME TO userrole_new;")

    # Step 2: Recreate the old enum type with lowercase values
    op.execute("""
        CREATE TYPE userrole AS ENUM ('user', 'buyer', 'seller', 'both');
        """)

    # Step 3: Update the column to use the old enum type
    op.execute("""
        ALTER TABLE users
        ALTER COLUMN role TYPE userrole
        USING LOWER(role::text)::userrole;
        """)

    # Step 4: Drop the new enum type
    op.execute("DROP TYPE userrole_new;")
    # ### end Alembic commands ###
