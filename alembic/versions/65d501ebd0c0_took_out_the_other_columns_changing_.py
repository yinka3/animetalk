"""took out the other columns, changing role access

Revision ID: 65d501ebd0c0
Revises: 884e6bc1100f
Create Date: 2025-01-10 14:50:19.905242

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '65d501ebd0c0'
down_revision: Union[str, None] = '884e6bc1100f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('buyers_email_key', 'buyers', type_='unique')
    op.drop_column('buyers', 'email')
    op.drop_column('buyers', 'name')
    op.drop_constraint('sellers_email_key', 'sellers', type_='unique')
    op.drop_column('sellers', 'email')
    op.drop_column('sellers', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sellers', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('sellers', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint('sellers_email_key', 'sellers', ['email'])
    op.add_column('buyers', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('buyers', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint('buyers_email_key', 'buyers', ['email'])
    # ### end Alembic commands ###
